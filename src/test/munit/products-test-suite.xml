<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="products-test-suite.xml" />
	<munit:test name="products-test-suite-products-mainTest1" doc:id="8ab2f5e6-fbd5-430a-89fd-0db51318c210" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a9a961aa-98da-4d29-96b5-5d45175cfea7" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="c1b6db01-11ad-487c-9ca1-822b8a16c0f6" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="4bcad980-e2ea-469b-baf8-2f65b13fd6e1" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-1" doc:id="c2b6fff4-e59d-45ef-a6cf-1d76ab97ef36" description="Test" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="24b42d69-a1f1-418d-929c-3ac72012fd57" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="5580a05a-a70d-425a-adf6-fcd58f0d96a2" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="8d421cc2-82d0-4097-895a-beaf1fe4f0da" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-2" doc:id="8dbe3d9b-a996-4336-a18d-d197df3beb9c" description="Test" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="c15b2d56-7eda-42c3-83b2-382d6bf4a24e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			

</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="baf7018b-941f-4f30-9c34-f3d27a3b3492" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="eda78c64-5b89-4bf5-a367-322119bc019c" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-3" doc:id="3d2bf12e-b11d-4583-9444-cb05aff44197" description="Test" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="130c6a7b-02c9-44d5-abd5-c9bbf2ad0598" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			


</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="b4293671-7546-4a4d-8d16-fb3abc1099bf" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="27dea5f4-d025-47ab-aa20-1c07705cdbf4" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-4" doc:id="8c05d33b-8fd3-4dc9-97c8-19996f575c4d" description="Test" expectedErrorType="APIKIT:NOT_ACCEPTABLE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a02b2c35-97f1-4784-ab17-f4ebba84ae3b" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			



</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="78833506-71c9-4e98-a14f-0f9ba5d4167e" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="cbd1f069-5140-414e-aaf6-4a68bfa0f6b4" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-5" doc:id="15f2b91e-ce42-4454-8182-4c986ce931fc" description="Test" expectedErrorType="APIKIT:NOT_IMPLEMENTED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7c0e4a66-bd23-4dc5-854b-9f7fe76515fa" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			




</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="72b9ef10-1039-45e7-93e1-f4149914050c" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="e07d5bde-4f9a-4d5b-80d0-50b5a47cfb59" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-6" doc:id="eca5c75e-a816-4f04-b1cd-e76c2e0fced9" description="Test" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="1ba3881e-a1d5-444c-9005-6eb3699d72ea" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			





</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="0f76deba-43e2-4f34-a993-ad1a6632b9cd" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="af9ba4d5-89ad-4b39-ac45-fdd9be9e9575" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-mainTest1-7" doc:id="e42be5cc-387a-45db-a677-204debd237b4" description="Test" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8c70b892-404e-4d29-8b1e-d3f75e3b5e11" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			






</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-main" doc:id="fc59e288-7657-47f4-811b-f9c2c78da558" name="products-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="160f40ac-a7d3-4f82-88ef-a4d2e3bd5cc4" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-products-consoleTest" doc:id="c2ee4bd6-b4d6-47b8-87da-1ebc46bfc49e" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="3453ed18-f460-4b33-8caa-4c7197082686" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="products-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to products-console" doc:id="2a3d5655-0a3f-4525-b119-94ccc2d7810a" name="products-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7c789e0b-3f05-4502-a2ed-7757277c174c" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="products-test-suite-get:\products:products-configTest" doc:id="a3106e19-4a89-46fa-a1dd-3e23368b229d" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="60da8bb0-2728-46cc-8d6f-f835a2b0e4aa" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d032be32-00ac-4b80-b343-b4d87f0331d9" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\products:products-config" doc:id="7d99a564-f7f0-45a6-aaf8-52e0b3dd402c" name="get:\products:products-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="e2799cf6-8a8e-4807-8cff-44d5e3a7405d" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>


</mule>
